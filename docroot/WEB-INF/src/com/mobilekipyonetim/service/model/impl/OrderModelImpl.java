/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.mobilekipyonetim.service.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.mobilekipyonetim.service.model.Order;
import com.mobilekipyonetim.service.model.OrderModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Order service. Represents a row in the &quot;Order&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.mobilekipyonetim.service.model.OrderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrderImpl}.
 * </p>
 *
 * @author 002834
 * @see OrderImpl
 * @see com.mobilekipyonetim.service.model.Order
 * @see com.mobilekipyonetim.service.model.OrderModel
 * @generated
 */
public class OrderModelImpl extends BaseModelImpl<Order> implements OrderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a order model instance should use the {@link com.mobilekipyonetim.service.model.Order} interface instead.
	 */
	public static final String TABLE_NAME = "Order";
	public static final Object[][] TABLE_COLUMNS = {
			{ "orderEntityId", Types.INTEGER },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizationId", Types.BIGINT },
			{ "lat", Types.VARCHAR },
			{ "lng", Types.VARCHAR },
			{ "date_", Types.TIMESTAMP },
			{ "address", Types.VARCHAR },
			{ "ilce", Types.VARCHAR },
			{ "mahalle", Types.VARCHAR },
			{ "sokak", Types.VARCHAR },
			{ "bina", Types.VARCHAR },
			{ "vehicleId", Types.BIGINT },
			{ "statusId", Types.BIGINT },
			{ "priorityId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Order (orderEntityId INTEGER not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,organizationId LONG,lat VARCHAR(75) null,lng VARCHAR(75) null,date_ DATE null,address VARCHAR(75) null,ilce VARCHAR(75) null,mahalle VARCHAR(75) null,sokak VARCHAR(75) null,bina VARCHAR(75) null,vehicleId LONG,statusId LONG,priorityId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Order";
	public static final String ORDER_BY_JPQL = " ORDER BY order_.date ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Order.date_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.mobilekipyonetim.service.model.Order"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.mobilekipyonetim.service.model.Order"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.mobilekipyonetim.service.model.Order"),
			true);
	public static long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static long VEHICLEID_COLUMN_BITMASK = 2L;
	public static long DATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.mobilekipyonetim.service.model.Order"));

	public OrderModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _orderEntityId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setOrderEntityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _orderEntityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Order.class;
	}

	@Override
	public String getModelClassName() {
		return Order.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("orderEntityId", getOrderEntityId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("lat", getLat());
		attributes.put("lng", getLng());
		attributes.put("date", getDate());
		attributes.put("address", getAddress());
		attributes.put("ilce", getIlce());
		attributes.put("mahalle", getMahalle());
		attributes.put("sokak", getSokak());
		attributes.put("bina", getBina());
		attributes.put("vehicleId", getVehicleId());
		attributes.put("statusId", getStatusId());
		attributes.put("priorityId", getPriorityId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer orderEntityId = (Integer)attributes.get("orderEntityId");

		if (orderEntityId != null) {
			setOrderEntityId(orderEntityId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String lat = (String)attributes.get("lat");

		if (lat != null) {
			setLat(lat);
		}

		String lng = (String)attributes.get("lng");

		if (lng != null) {
			setLng(lng);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String ilce = (String)attributes.get("ilce");

		if (ilce != null) {
			setIlce(ilce);
		}

		String mahalle = (String)attributes.get("mahalle");

		if (mahalle != null) {
			setMahalle(mahalle);
		}

		String sokak = (String)attributes.get("sokak");

		if (sokak != null) {
			setSokak(sokak);
		}

		String bina = (String)attributes.get("bina");

		if (bina != null) {
			setBina(bina);
		}

		Long vehicleId = (Long)attributes.get("vehicleId");

		if (vehicleId != null) {
			setVehicleId(vehicleId);
		}

		Long statusId = (Long)attributes.get("statusId");

		if (statusId != null) {
			setStatusId(statusId);
		}

		Long priorityId = (Long)attributes.get("priorityId");

		if (priorityId != null) {
			setPriorityId(priorityId);
		}
	}

	@Override
	public int getOrderEntityId() {
		return _orderEntityId;
	}

	@Override
	public void setOrderEntityId(int orderEntityId) {
		_orderEntityId = orderEntityId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public String getLat() {
		if (_lat == null) {
			return StringPool.BLANK;
		}
		else {
			return _lat;
		}
	}

	@Override
	public void setLat(String lat) {
		_lat = lat;
	}

	@Override
	public String getLng() {
		if (_lng == null) {
			return StringPool.BLANK;
		}
		else {
			return _lng;
		}
	}

	@Override
	public void setLng(String lng) {
		_lng = lng;
	}

	@Override
	public Date getDate() {
		return _date;
	}

	@Override
	public void setDate(Date date) {
		_columnBitmask = -1L;

		_date = date;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getIlce() {
		if (_ilce == null) {
			return StringPool.BLANK;
		}
		else {
			return _ilce;
		}
	}

	@Override
	public void setIlce(String ilce) {
		_ilce = ilce;
	}

	@Override
	public String getMahalle() {
		if (_mahalle == null) {
			return StringPool.BLANK;
		}
		else {
			return _mahalle;
		}
	}

	@Override
	public void setMahalle(String mahalle) {
		_mahalle = mahalle;
	}

	@Override
	public String getSokak() {
		if (_sokak == null) {
			return StringPool.BLANK;
		}
		else {
			return _sokak;
		}
	}

	@Override
	public void setSokak(String sokak) {
		_sokak = sokak;
	}

	@Override
	public String getBina() {
		if (_bina == null) {
			return StringPool.BLANK;
		}
		else {
			return _bina;
		}
	}

	@Override
	public void setBina(String bina) {
		_bina = bina;
	}

	@Override
	public long getVehicleId() {
		return _vehicleId;
	}

	@Override
	public void setVehicleId(long vehicleId) {
		_columnBitmask |= VEHICLEID_COLUMN_BITMASK;

		if (!_setOriginalVehicleId) {
			_setOriginalVehicleId = true;

			_originalVehicleId = _vehicleId;
		}

		_vehicleId = vehicleId;
	}

	public long getOriginalVehicleId() {
		return _originalVehicleId;
	}

	@Override
	public long getStatusId() {
		return _statusId;
	}

	@Override
	public void setStatusId(long statusId) {
		_statusId = statusId;
	}

	@Override
	public long getPriorityId() {
		return _priorityId;
	}

	@Override
	public void setPriorityId(long priorityId) {
		_priorityId = priorityId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Order toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Order)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrderImpl orderImpl = new OrderImpl();

		orderImpl.setOrderEntityId(getOrderEntityId());
		orderImpl.setGroupId(getGroupId());
		orderImpl.setCompanyId(getCompanyId());
		orderImpl.setUserId(getUserId());
		orderImpl.setUserName(getUserName());
		orderImpl.setCreateDate(getCreateDate());
		orderImpl.setModifiedDate(getModifiedDate());
		orderImpl.setOrganizationId(getOrganizationId());
		orderImpl.setLat(getLat());
		orderImpl.setLng(getLng());
		orderImpl.setDate(getDate());
		orderImpl.setAddress(getAddress());
		orderImpl.setIlce(getIlce());
		orderImpl.setMahalle(getMahalle());
		orderImpl.setSokak(getSokak());
		orderImpl.setBina(getBina());
		orderImpl.setVehicleId(getVehicleId());
		orderImpl.setStatusId(getStatusId());
		orderImpl.setPriorityId(getPriorityId());

		orderImpl.resetOriginalValues();

		return orderImpl;
	}

	@Override
	public int compareTo(Order order) {
		int value = 0;

		value = DateUtil.compareTo(getDate(), order.getDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Order)) {
			return false;
		}

		Order order = (Order)obj;

		int primaryKey = order.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OrderModelImpl orderModelImpl = this;

		orderModelImpl._originalOrganizationId = orderModelImpl._organizationId;

		orderModelImpl._setOriginalOrganizationId = false;

		orderModelImpl._originalVehicleId = orderModelImpl._vehicleId;

		orderModelImpl._setOriginalVehicleId = false;

		orderModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Order> toCacheModel() {
		OrderCacheModel orderCacheModel = new OrderCacheModel();

		orderCacheModel.orderEntityId = getOrderEntityId();

		orderCacheModel.groupId = getGroupId();

		orderCacheModel.companyId = getCompanyId();

		orderCacheModel.userId = getUserId();

		orderCacheModel.userName = getUserName();

		String userName = orderCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			orderCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			orderCacheModel.createDate = createDate.getTime();
		}
		else {
			orderCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			orderCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			orderCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		orderCacheModel.organizationId = getOrganizationId();

		orderCacheModel.lat = getLat();

		String lat = orderCacheModel.lat;

		if ((lat != null) && (lat.length() == 0)) {
			orderCacheModel.lat = null;
		}

		orderCacheModel.lng = getLng();

		String lng = orderCacheModel.lng;

		if ((lng != null) && (lng.length() == 0)) {
			orderCacheModel.lng = null;
		}

		Date date = getDate();

		if (date != null) {
			orderCacheModel.date = date.getTime();
		}
		else {
			orderCacheModel.date = Long.MIN_VALUE;
		}

		orderCacheModel.address = getAddress();

		String address = orderCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			orderCacheModel.address = null;
		}

		orderCacheModel.ilce = getIlce();

		String ilce = orderCacheModel.ilce;

		if ((ilce != null) && (ilce.length() == 0)) {
			orderCacheModel.ilce = null;
		}

		orderCacheModel.mahalle = getMahalle();

		String mahalle = orderCacheModel.mahalle;

		if ((mahalle != null) && (mahalle.length() == 0)) {
			orderCacheModel.mahalle = null;
		}

		orderCacheModel.sokak = getSokak();

		String sokak = orderCacheModel.sokak;

		if ((sokak != null) && (sokak.length() == 0)) {
			orderCacheModel.sokak = null;
		}

		orderCacheModel.bina = getBina();

		String bina = orderCacheModel.bina;

		if ((bina != null) && (bina.length() == 0)) {
			orderCacheModel.bina = null;
		}

		orderCacheModel.vehicleId = getVehicleId();

		orderCacheModel.statusId = getStatusId();

		orderCacheModel.priorityId = getPriorityId();

		return orderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{orderEntityId=");
		sb.append(getOrderEntityId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", lat=");
		sb.append(getLat());
		sb.append(", lng=");
		sb.append(getLng());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", ilce=");
		sb.append(getIlce());
		sb.append(", mahalle=");
		sb.append(getMahalle());
		sb.append(", sokak=");
		sb.append(getSokak());
		sb.append(", bina=");
		sb.append(getBina());
		sb.append(", vehicleId=");
		sb.append(getVehicleId());
		sb.append(", statusId=");
		sb.append(getStatusId());
		sb.append(", priorityId=");
		sb.append(getPriorityId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.mobilekipyonetim.service.model.Order");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>orderEntityId</column-name><column-value><![CDATA[");
		sb.append(getOrderEntityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lat</column-name><column-value><![CDATA[");
		sb.append(getLat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lng</column-name><column-value><![CDATA[");
		sb.append(getLng());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ilce</column-name><column-value><![CDATA[");
		sb.append(getIlce());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mahalle</column-name><column-value><![CDATA[");
		sb.append(getMahalle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sokak</column-name><column-value><![CDATA[");
		sb.append(getSokak());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bina</column-name><column-value><![CDATA[");
		sb.append(getBina());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vehicleId</column-name><column-value><![CDATA[");
		sb.append(getVehicleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusId</column-name><column-value><![CDATA[");
		sb.append(getStatusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priorityId</column-name><column-value><![CDATA[");
		sb.append(getPriorityId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Order.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Order.class };
	private int _orderEntityId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _lat;
	private String _lng;
	private Date _date;
	private String _address;
	private String _ilce;
	private String _mahalle;
	private String _sokak;
	private String _bina;
	private long _vehicleId;
	private long _originalVehicleId;
	private boolean _setOriginalVehicleId;
	private long _statusId;
	private long _priorityId;
	private long _columnBitmask;
	private Order _escapedModel;
}